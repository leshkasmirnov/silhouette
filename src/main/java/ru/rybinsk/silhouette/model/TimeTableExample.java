package ru.rybinsk.silhouette.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class TimeTableExample {
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table time_table
     * @mbggenerated
     */
    protected String orderByClause;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table time_table
     * @mbggenerated
     */
    protected boolean distinct;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table time_table
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table time_table
     * @mbggenerated
     */
    public TimeTableExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table time_table
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table time_table
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table time_table
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table time_table
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table time_table
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table time_table
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table time_table
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table time_table
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table time_table
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table time_table
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table time_table
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("tt.Id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("tt.Id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("tt.Id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("tt.Id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("tt.Id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("tt.Id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("tt.Id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("tt.Id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("tt.Id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("tt.Id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("tt.Id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("tt.Id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andDateIsNull() {
            addCriterion("tt.`Date` is null");
            return (Criteria) this;
        }

        public Criteria andDateIsNotNull() {
            addCriterion("tt.`Date` is not null");
            return (Criteria) this;
        }

        public Criteria andDateEqualTo(Date value) {
            addCriterionForJDBCDate("tt.`Date` =", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("tt.`Date` <>", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateGreaterThan(Date value) {
            addCriterionForJDBCDate("tt.`Date` >", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("tt.`Date` >=", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLessThan(Date value) {
            addCriterionForJDBCDate("tt.`Date` <", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("tt.`Date` <=", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateIn(List<Date> values) {
            addCriterionForJDBCDate("tt.`Date` in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("tt.`Date` not in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("tt.`Date` between", value1, value2, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("tt.`Date` not between", value1, value2, "date");
            return (Criteria) this;
        }

        public Criteria andTimeIsNull() {
            addCriterion("tt.`Time` is null");
            return (Criteria) this;
        }

        public Criteria andTimeIsNotNull() {
            addCriterion("tt.`Time` is not null");
            return (Criteria) this;
        }

        public Criteria andTimeEqualTo(String value) {
            addCriterion("tt.`Time` =", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotEqualTo(String value) {
            addCriterion("tt.`Time` <>", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThan(String value) {
            addCriterion("tt.`Time` >", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThanOrEqualTo(String value) {
            addCriterion("tt.`Time` >=", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLessThan(String value) {
            addCriterion("tt.`Time` <", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLessThanOrEqualTo(String value) {
            addCriterion("tt.`Time` <=", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLike(String value) {
            addCriterion("tt.`Time` like", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotLike(String value) {
            addCriterion("tt.`Time` not like", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeIn(List<String> values) {
            addCriterion("tt.`Time` in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotIn(List<String> values) {
            addCriterion("tt.`Time` not in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeBetween(String value1, String value2) {
            addCriterion("tt.`Time` between", value1, value2, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotBetween(String value1, String value2) {
            addCriterion("tt.`Time` not between", value1, value2, "time");
            return (Criteria) this;
        }

        public Criteria andSimulatorIdIsNull() {
            addCriterion("tt.Simulator_Id is null");
            return (Criteria) this;
        }

        public Criteria andSimulatorIdIsNotNull() {
            addCriterion("tt.Simulator_Id is not null");
            return (Criteria) this;
        }

        public Criteria andSimulatorIdEqualTo(Integer value) {
            addCriterion("tt.Simulator_Id =", value, "simulatorId");
            return (Criteria) this;
        }

        public Criteria andSimulatorIdNotEqualTo(Integer value) {
            addCriterion("tt.Simulator_Id <>", value, "simulatorId");
            return (Criteria) this;
        }

        public Criteria andSimulatorIdGreaterThan(Integer value) {
            addCriterion("tt.Simulator_Id >", value, "simulatorId");
            return (Criteria) this;
        }

        public Criteria andSimulatorIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("tt.Simulator_Id >=", value, "simulatorId");
            return (Criteria) this;
        }

        public Criteria andSimulatorIdLessThan(Integer value) {
            addCriterion("tt.Simulator_Id <", value, "simulatorId");
            return (Criteria) this;
        }

        public Criteria andSimulatorIdLessThanOrEqualTo(Integer value) {
            addCriterion("tt.Simulator_Id <=", value, "simulatorId");
            return (Criteria) this;
        }

        public Criteria andSimulatorIdIn(List<Integer> values) {
            addCriterion("tt.Simulator_Id in", values, "simulatorId");
            return (Criteria) this;
        }

        public Criteria andSimulatorIdNotIn(List<Integer> values) {
            addCriterion("tt.Simulator_Id not in", values, "simulatorId");
            return (Criteria) this;
        }

        public Criteria andSimulatorIdBetween(Integer value1, Integer value2) {
            addCriterion("tt.Simulator_Id between", value1, value2, "simulatorId");
            return (Criteria) this;
        }

        public Criteria andSimulatorIdNotBetween(Integer value1, Integer value2) {
            addCriterion("tt.Simulator_Id not between", value1, value2, "simulatorId");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdIsNull() {
            addCriterion("tt.Personal_Data_Id is null");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdIsNotNull() {
            addCriterion("tt.Personal_Data_Id is not null");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdEqualTo(Integer value) {
            addCriterion("tt.Personal_Data_Id =", value, "personalDataId");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdNotEqualTo(Integer value) {
            addCriterion("tt.Personal_Data_Id <>", value, "personalDataId");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdGreaterThan(Integer value) {
            addCriterion("tt.Personal_Data_Id >", value, "personalDataId");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("tt.Personal_Data_Id >=", value, "personalDataId");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdLessThan(Integer value) {
            addCriterion("tt.Personal_Data_Id <", value, "personalDataId");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdLessThanOrEqualTo(Integer value) {
            addCriterion("tt.Personal_Data_Id <=", value, "personalDataId");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdIn(List<Integer> values) {
            addCriterion("tt.Personal_Data_Id in", values, "personalDataId");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdNotIn(List<Integer> values) {
            addCriterion("tt.Personal_Data_Id not in", values, "personalDataId");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdBetween(Integer value1, Integer value2) {
            addCriterion("tt.Personal_Data_Id between", value1, value2, "personalDataId");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdNotBetween(Integer value1, Integer value2) {
            addCriterion("tt.Personal_Data_Id not between", value1, value2, "personalDataId");
            return (Criteria) this;
        }

        public Criteria andNoteIsNull() {
            addCriterion("tt.Note is null");
            return (Criteria) this;
        }

        public Criteria andNoteIsNotNull() {
            addCriterion("tt.Note is not null");
            return (Criteria) this;
        }

        public Criteria andNoteEqualTo(String value) {
            addCriterion("tt.Note =", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotEqualTo(String value) {
            addCriterion("tt.Note <>", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThan(String value) {
            addCriterion("tt.Note >", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThanOrEqualTo(String value) {
            addCriterion("tt.Note >=", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLessThan(String value) {
            addCriterion("tt.Note <", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLessThanOrEqualTo(String value) {
            addCriterion("tt.Note <=", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLike(String value) {
            addCriterion("tt.Note like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotLike(String value) {
            addCriterion("tt.Note not like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteIn(List<String> values) {
            addCriterion("tt.Note in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotIn(List<String> values) {
            addCriterion("tt.Note not in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteBetween(String value1, String value2) {
            addCriterion("tt.Note between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotBetween(String value1, String value2) {
            addCriterion("tt.Note not between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andPrintedActIsNull() {
            addCriterion("tt.Printed_Act is null");
            return (Criteria) this;
        }

        public Criteria andPrintedActIsNotNull() {
            addCriterion("tt.Printed_Act is not null");
            return (Criteria) this;
        }

        public Criteria andPrintedActEqualTo(Boolean value) {
            addCriterion("tt.Printed_Act =", value, "printedAct");
            return (Criteria) this;
        }

        public Criteria andPrintedActNotEqualTo(Boolean value) {
            addCriterion("tt.Printed_Act <>", value, "printedAct");
            return (Criteria) this;
        }

        public Criteria andPrintedActGreaterThan(Boolean value) {
            addCriterion("tt.Printed_Act >", value, "printedAct");
            return (Criteria) this;
        }

        public Criteria andPrintedActGreaterThanOrEqualTo(Boolean value) {
            addCriterion("tt.Printed_Act >=", value, "printedAct");
            return (Criteria) this;
        }

        public Criteria andPrintedActLessThan(Boolean value) {
            addCriterion("tt.Printed_Act <", value, "printedAct");
            return (Criteria) this;
        }

        public Criteria andPrintedActLessThanOrEqualTo(Boolean value) {
            addCriterion("tt.Printed_Act <=", value, "printedAct");
            return (Criteria) this;
        }

        public Criteria andPrintedActIn(List<Boolean> values) {
            addCriterion("tt.Printed_Act in", values, "printedAct");
            return (Criteria) this;
        }

        public Criteria andPrintedActNotIn(List<Boolean> values) {
            addCriterion("tt.Printed_Act not in", values, "printedAct");
            return (Criteria) this;
        }

        public Criteria andPrintedActBetween(Boolean value1, Boolean value2) {
            addCriterion("tt.Printed_Act between", value1, value2, "printedAct");
            return (Criteria) this;
        }

        public Criteria andPrintedActNotBetween(Boolean value1, Boolean value2) {
            addCriterion("tt.Printed_Act not between", value1, value2, "printedAct");
            return (Criteria) this;
        }

        public Criteria andTimeLikeInsensitive(String value) {
            addCriterion("upper(tt.`Time`) like", value.toUpperCase(), "time");
            return (Criteria) this;
        }

        public Criteria andNoteLikeInsensitive(String value) {
            addCriterion("upper(tt.Note) like", value.toUpperCase(), "note");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table time_table
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;
        private Object value;
        private Object secondValue;
        private boolean noValue;
        private boolean singleValue;
        private boolean betweenValue;
        private boolean listValue;
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table time_table
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}