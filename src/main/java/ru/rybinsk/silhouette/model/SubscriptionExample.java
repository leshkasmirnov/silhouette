package ru.rybinsk.silhouette.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class SubscriptionExample {
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table subscription
     * @mbggenerated
     */
    protected String orderByClause;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table subscription
     * @mbggenerated
     */
    protected boolean distinct;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table subscription
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table subscription
     * @mbggenerated
     */
    public SubscriptionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table subscription
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table subscription
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table subscription
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table subscription
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table subscription
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table subscription
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table subscription
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table subscription
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table subscription
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table subscription
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table subscription
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("sn.Id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("sn.Id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("sn.Id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("sn.Id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("sn.Id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("sn.Id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("sn.Id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("sn.Id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("sn.Id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("sn.Id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("sn.Id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("sn.Id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSubscriptionNumberIsNull() {
            addCriterion("sn.Subscription_Number is null");
            return (Criteria) this;
        }

        public Criteria andSubscriptionNumberIsNotNull() {
            addCriterion("sn.Subscription_Number is not null");
            return (Criteria) this;
        }

        public Criteria andSubscriptionNumberEqualTo(String value) {
            addCriterion("sn.Subscription_Number =", value, "subscriptionNumber");
            return (Criteria) this;
        }

        public Criteria andSubscriptionNumberNotEqualTo(String value) {
            addCriterion("sn.Subscription_Number <>", value, "subscriptionNumber");
            return (Criteria) this;
        }

        public Criteria andSubscriptionNumberGreaterThan(String value) {
            addCriterion("sn.Subscription_Number >", value, "subscriptionNumber");
            return (Criteria) this;
        }

        public Criteria andSubscriptionNumberGreaterThanOrEqualTo(String value) {
            addCriterion("sn.Subscription_Number >=", value, "subscriptionNumber");
            return (Criteria) this;
        }

        public Criteria andSubscriptionNumberLessThan(String value) {
            addCriterion("sn.Subscription_Number <", value, "subscriptionNumber");
            return (Criteria) this;
        }

        public Criteria andSubscriptionNumberLessThanOrEqualTo(String value) {
            addCriterion("sn.Subscription_Number <=", value, "subscriptionNumber");
            return (Criteria) this;
        }

        public Criteria andSubscriptionNumberLike(String value) {
            addCriterion("sn.Subscription_Number like", value, "subscriptionNumber");
            return (Criteria) this;
        }

        public Criteria andSubscriptionNumberNotLike(String value) {
            addCriterion("sn.Subscription_Number not like", value, "subscriptionNumber");
            return (Criteria) this;
        }

        public Criteria andSubscriptionNumberIn(List<String> values) {
            addCriterion("sn.Subscription_Number in", values, "subscriptionNumber");
            return (Criteria) this;
        }

        public Criteria andSubscriptionNumberNotIn(List<String> values) {
            addCriterion("sn.Subscription_Number not in", values, "subscriptionNumber");
            return (Criteria) this;
        }

        public Criteria andSubscriptionNumberBetween(String value1, String value2) {
            addCriterion("sn.Subscription_Number between", value1, value2, "subscriptionNumber");
            return (Criteria) this;
        }

        public Criteria andSubscriptionNumberNotBetween(String value1, String value2) {
            addCriterion("sn.Subscription_Number not between", value1, value2, "subscriptionNumber");
            return (Criteria) this;
        }

        public Criteria andPeriodIsNull() {
            addCriterion("sn.Period is null");
            return (Criteria) this;
        }

        public Criteria andPeriodIsNotNull() {
            addCriterion("sn.Period is not null");
            return (Criteria) this;
        }

        public Criteria andPeriodEqualTo(Integer value) {
            addCriterion("sn.Period =", value, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodNotEqualTo(Integer value) {
            addCriterion("sn.Period <>", value, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodGreaterThan(Integer value) {
            addCriterion("sn.Period >", value, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodGreaterThanOrEqualTo(Integer value) {
            addCriterion("sn.Period >=", value, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodLessThan(Integer value) {
            addCriterion("sn.Period <", value, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodLessThanOrEqualTo(Integer value) {
            addCriterion("sn.Period <=", value, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodIn(List<Integer> values) {
            addCriterion("sn.Period in", values, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodNotIn(List<Integer> values) {
            addCriterion("sn.Period not in", values, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodBetween(Integer value1, Integer value2) {
            addCriterion("sn.Period between", value1, value2, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodNotBetween(Integer value1, Integer value2) {
            addCriterion("sn.Period not between", value1, value2, "period");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("sn.`Type` is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("sn.`Type` is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Integer value) {
            addCriterion("sn.`Type` =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Integer value) {
            addCriterion("sn.`Type` <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Integer value) {
            addCriterion("sn.`Type` >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("sn.`Type` >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Integer value) {
            addCriterion("sn.`Type` <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Integer value) {
            addCriterion("sn.`Type` <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Integer> values) {
            addCriterion("sn.`Type` in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Integer> values) {
            addCriterion("sn.`Type` not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Integer value1, Integer value2) {
            addCriterion("sn.`Type` between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("sn.`Type` not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andStateIsNull() {
            addCriterion("sn.`State` is null");
            return (Criteria) this;
        }

        public Criteria andStateIsNotNull() {
            addCriterion("sn.`State` is not null");
            return (Criteria) this;
        }

        public Criteria andStateEqualTo(Integer value) {
            addCriterion("sn.`State` =", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotEqualTo(Integer value) {
            addCriterion("sn.`State` <>", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateGreaterThan(Integer value) {
            addCriterion("sn.`State` >", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateGreaterThanOrEqualTo(Integer value) {
            addCriterion("sn.`State` >=", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateLessThan(Integer value) {
            addCriterion("sn.`State` <", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateLessThanOrEqualTo(Integer value) {
            addCriterion("sn.`State` <=", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateIn(List<Integer> values) {
            addCriterion("sn.`State` in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotIn(List<Integer> values) {
            addCriterion("sn.`State` not in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateBetween(Integer value1, Integer value2) {
            addCriterion("sn.`State` between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotBetween(Integer value1, Integer value2) {
            addCriterion("sn.`State` not between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andDateFromIsNull() {
            addCriterion("sn.Date_From is null");
            return (Criteria) this;
        }

        public Criteria andDateFromIsNotNull() {
            addCriterion("sn.Date_From is not null");
            return (Criteria) this;
        }

        public Criteria andDateFromEqualTo(Date value) {
            addCriterionForJDBCDate("sn.Date_From =", value, "dateFrom");
            return (Criteria) this;
        }

        public Criteria andDateFromNotEqualTo(Date value) {
            addCriterionForJDBCDate("sn.Date_From <>", value, "dateFrom");
            return (Criteria) this;
        }

        public Criteria andDateFromGreaterThan(Date value) {
            addCriterionForJDBCDate("sn.Date_From >", value, "dateFrom");
            return (Criteria) this;
        }

        public Criteria andDateFromGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("sn.Date_From >=", value, "dateFrom");
            return (Criteria) this;
        }

        public Criteria andDateFromLessThan(Date value) {
            addCriterionForJDBCDate("sn.Date_From <", value, "dateFrom");
            return (Criteria) this;
        }

        public Criteria andDateFromLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("sn.Date_From <=", value, "dateFrom");
            return (Criteria) this;
        }

        public Criteria andDateFromIn(List<Date> values) {
            addCriterionForJDBCDate("sn.Date_From in", values, "dateFrom");
            return (Criteria) this;
        }

        public Criteria andDateFromNotIn(List<Date> values) {
            addCriterionForJDBCDate("sn.Date_From not in", values, "dateFrom");
            return (Criteria) this;
        }

        public Criteria andDateFromBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("sn.Date_From between", value1, value2, "dateFrom");
            return (Criteria) this;
        }

        public Criteria andDateFromNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("sn.Date_From not between", value1, value2, "dateFrom");
            return (Criteria) this;
        }

        public Criteria andDateToIsNull() {
            addCriterion("sn.Date_To is null");
            return (Criteria) this;
        }

        public Criteria andDateToIsNotNull() {
            addCriterion("sn.Date_To is not null");
            return (Criteria) this;
        }

        public Criteria andDateToEqualTo(Date value) {
            addCriterionForJDBCDate("sn.Date_To =", value, "dateTo");
            return (Criteria) this;
        }

        public Criteria andDateToNotEqualTo(Date value) {
            addCriterionForJDBCDate("sn.Date_To <>", value, "dateTo");
            return (Criteria) this;
        }

        public Criteria andDateToGreaterThan(Date value) {
            addCriterionForJDBCDate("sn.Date_To >", value, "dateTo");
            return (Criteria) this;
        }

        public Criteria andDateToGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("sn.Date_To >=", value, "dateTo");
            return (Criteria) this;
        }

        public Criteria andDateToLessThan(Date value) {
            addCriterionForJDBCDate("sn.Date_To <", value, "dateTo");
            return (Criteria) this;
        }

        public Criteria andDateToLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("sn.Date_To <=", value, "dateTo");
            return (Criteria) this;
        }

        public Criteria andDateToIn(List<Date> values) {
            addCriterionForJDBCDate("sn.Date_To in", values, "dateTo");
            return (Criteria) this;
        }

        public Criteria andDateToNotIn(List<Date> values) {
            addCriterionForJDBCDate("sn.Date_To not in", values, "dateTo");
            return (Criteria) this;
        }

        public Criteria andDateToBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("sn.Date_To between", value1, value2, "dateTo");
            return (Criteria) this;
        }

        public Criteria andDateToNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("sn.Date_To not between", value1, value2, "dateTo");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberIsNull() {
            addCriterion("sn.Participation_Number is null");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberIsNotNull() {
            addCriterion("sn.Participation_Number is not null");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberEqualTo(Float value) {
            addCriterion("sn.Participation_Number =", value, "participationNumber");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberNotEqualTo(Float value) {
            addCriterion("sn.Participation_Number <>", value, "participationNumber");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberGreaterThan(Float value) {
            addCriterion("sn.Participation_Number >", value, "participationNumber");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberGreaterThanOrEqualTo(Float value) {
            addCriterion("sn.Participation_Number >=", value, "participationNumber");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberLessThan(Float value) {
            addCriterion("sn.Participation_Number <", value, "participationNumber");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberLessThanOrEqualTo(Float value) {
            addCriterion("sn.Participation_Number <=", value, "participationNumber");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberIn(List<Float> values) {
            addCriterion("sn.Participation_Number in", values, "participationNumber");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberNotIn(List<Float> values) {
            addCriterion("sn.Participation_Number not in", values, "participationNumber");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberBetween(Float value1, Float value2) {
            addCriterion("sn.Participation_Number between", value1, value2, "participationNumber");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberNotBetween(Float value1, Float value2) {
            addCriterion("sn.Participation_Number not between", value1, value2, "participationNumber");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberPresentIsNull() {
            addCriterion("sn.Participation_Number_Present is null");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberPresentIsNotNull() {
            addCriterion("sn.Participation_Number_Present is not null");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberPresentEqualTo(Float value) {
            addCriterion("sn.Participation_Number_Present =", value, "participationNumberPresent");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberPresentNotEqualTo(Float value) {
            addCriterion("sn.Participation_Number_Present <>", value, "participationNumberPresent");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberPresentGreaterThan(Float value) {
            addCriterion("sn.Participation_Number_Present >", value, "participationNumberPresent");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberPresentGreaterThanOrEqualTo(Float value) {
            addCriterion("sn.Participation_Number_Present >=", value, "participationNumberPresent");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberPresentLessThan(Float value) {
            addCriterion("sn.Participation_Number_Present <", value, "participationNumberPresent");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberPresentLessThanOrEqualTo(Float value) {
            addCriterion("sn.Participation_Number_Present <=", value, "participationNumberPresent");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberPresentIn(List<Float> values) {
            addCriterion("sn.Participation_Number_Present in", values, "participationNumberPresent");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberPresentNotIn(List<Float> values) {
            addCriterion("sn.Participation_Number_Present not in", values, "participationNumberPresent");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberPresentBetween(Float value1, Float value2) {
            addCriterion("sn.Participation_Number_Present between", value1, value2, "participationNumberPresent");
            return (Criteria) this;
        }

        public Criteria andParticipationNumberPresentNotBetween(Float value1, Float value2) {
            addCriterion("sn.Participation_Number_Present not between", value1, value2, "participationNumberPresent");
            return (Criteria) this;
        }

        public Criteria andReasonRejectIsNull() {
            addCriterion("sn.Reason_Reject is null");
            return (Criteria) this;
        }

        public Criteria andReasonRejectIsNotNull() {
            addCriterion("sn.Reason_Reject is not null");
            return (Criteria) this;
        }

        public Criteria andReasonRejectEqualTo(String value) {
            addCriterion("sn.Reason_Reject =", value, "reasonReject");
            return (Criteria) this;
        }

        public Criteria andReasonRejectNotEqualTo(String value) {
            addCriterion("sn.Reason_Reject <>", value, "reasonReject");
            return (Criteria) this;
        }

        public Criteria andReasonRejectGreaterThan(String value) {
            addCriterion("sn.Reason_Reject >", value, "reasonReject");
            return (Criteria) this;
        }

        public Criteria andReasonRejectGreaterThanOrEqualTo(String value) {
            addCriterion("sn.Reason_Reject >=", value, "reasonReject");
            return (Criteria) this;
        }

        public Criteria andReasonRejectLessThan(String value) {
            addCriterion("sn.Reason_Reject <", value, "reasonReject");
            return (Criteria) this;
        }

        public Criteria andReasonRejectLessThanOrEqualTo(String value) {
            addCriterion("sn.Reason_Reject <=", value, "reasonReject");
            return (Criteria) this;
        }

        public Criteria andReasonRejectLike(String value) {
            addCriterion("sn.Reason_Reject like", value, "reasonReject");
            return (Criteria) this;
        }

        public Criteria andReasonRejectNotLike(String value) {
            addCriterion("sn.Reason_Reject not like", value, "reasonReject");
            return (Criteria) this;
        }

        public Criteria andReasonRejectIn(List<String> values) {
            addCriterion("sn.Reason_Reject in", values, "reasonReject");
            return (Criteria) this;
        }

        public Criteria andReasonRejectNotIn(List<String> values) {
            addCriterion("sn.Reason_Reject not in", values, "reasonReject");
            return (Criteria) this;
        }

        public Criteria andReasonRejectBetween(String value1, String value2) {
            addCriterion("sn.Reason_Reject between", value1, value2, "reasonReject");
            return (Criteria) this;
        }

        public Criteria andReasonRejectNotBetween(String value1, String value2) {
            addCriterion("sn.Reason_Reject not between", value1, value2, "reasonReject");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdIsNull() {
            addCriterion("sn.Personal_Data_Id is null");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdIsNotNull() {
            addCriterion("sn.Personal_Data_Id is not null");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdEqualTo(Integer value) {
            addCriterion("sn.Personal_Data_Id =", value, "personalDataId");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdNotEqualTo(Integer value) {
            addCriterion("sn.Personal_Data_Id <>", value, "personalDataId");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdGreaterThan(Integer value) {
            addCriterion("sn.Personal_Data_Id >", value, "personalDataId");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("sn.Personal_Data_Id >=", value, "personalDataId");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdLessThan(Integer value) {
            addCriterion("sn.Personal_Data_Id <", value, "personalDataId");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdLessThanOrEqualTo(Integer value) {
            addCriterion("sn.Personal_Data_Id <=", value, "personalDataId");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdIn(List<Integer> values) {
            addCriterion("sn.Personal_Data_Id in", values, "personalDataId");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdNotIn(List<Integer> values) {
            addCriterion("sn.Personal_Data_Id not in", values, "personalDataId");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdBetween(Integer value1, Integer value2) {
            addCriterion("sn.Personal_Data_Id between", value1, value2, "personalDataId");
            return (Criteria) this;
        }

        public Criteria andPersonalDataIdNotBetween(Integer value1, Integer value2) {
            addCriterion("sn.Personal_Data_Id not between", value1, value2, "personalDataId");
            return (Criteria) this;
        }

        public Criteria andSubscriptionNumberLikeInsensitive(String value) {
            addCriterion("upper(sn.Subscription_Number) like", value.toUpperCase(), "subscriptionNumber");
            return (Criteria) this;
        }

        public Criteria andReasonRejectLikeInsensitive(String value) {
            addCriterion("upper(sn.Reason_Reject) like", value.toUpperCase(), "reasonReject");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table subscription
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;
        private Object value;
        private Object secondValue;
        private boolean noValue;
        private boolean singleValue;
        private boolean betweenValue;
        private boolean listValue;
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table subscription
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}