<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ru.rybinsk.silhouette.dao.SubscriptionMapper">
  <resultMap id="BaseResultMap" type="ru.rybinsk.silhouette.model.Subscription">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="sn_Id" jdbcType="INTEGER" property="id" />
    <result column="sn_Subscription_Number" jdbcType="VARCHAR" property="subscriptionNumber" />
    <result column="sn_Period" jdbcType="INTEGER" property="period" />
    <result column="sn_Type" jdbcType="INTEGER" property="type" />
    <result column="sn_State" jdbcType="INTEGER" property="state" />
    <result column="sn_Date_From" jdbcType="DATE" property="dateFrom" />
    <result column="sn_Date_To" jdbcType="DATE" property="dateTo" />
    <result column="sn_Participation_Number" jdbcType="REAL" property="participationNumber" />
    <result column="sn_Participation_Number_Present" jdbcType="REAL" property="participationNumberPresent" />
    <result column="sn_Reason_Reject" jdbcType="VARCHAR" property="reasonReject" />
    <result column="sn_Personal_Data_Id" jdbcType="INTEGER" property="personalDataId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    sn.Id as sn_Id, sn.Subscription_Number as sn_Subscription_Number, sn.Period as sn_Period, 
    sn.`Type` as `sn_Type`, sn.`State` as `sn_State`, sn.Date_From as sn_Date_From, sn.Date_To as sn_Date_To, 
    sn.Participation_Number as sn_Participation_Number, sn.Participation_Number_Present as sn_Participation_Number_Present, 
    sn.Reason_Reject as sn_Reason_Reject, sn.Personal_Data_Id as sn_Personal_Data_Id
  </sql>
  <select id="selectByExample" parameterType="ru.rybinsk.silhouette.model.SubscriptionExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from subscription sn
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from subscription sn
    where sn.Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from subscription
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="ru.rybinsk.silhouette.model.SubscriptionExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from subscription sn
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ru.rybinsk.silhouette.model.Subscription">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into subscription (Subscription_Number, Period, `Type`, 
      `State`, Date_From, Date_To, 
      Participation_Number, Participation_Number_Present, 
      Reason_Reject, Personal_Data_Id)
    values (#{subscriptionNumber,jdbcType=VARCHAR}, #{period,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{dateFrom,jdbcType=DATE}, #{dateTo,jdbcType=DATE}, 
      #{participationNumber,jdbcType=REAL}, #{participationNumberPresent,jdbcType=REAL}, 
      #{reasonReject,jdbcType=VARCHAR}, #{personalDataId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="ru.rybinsk.silhouette.model.Subscription">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into subscription
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="subscriptionNumber != null">
        Subscription_Number,
      </if>
      <if test="period != null">
        Period,
      </if>
      <if test="type != null">
        `Type`,
      </if>
      <if test="state != null">
        `State`,
      </if>
      <if test="dateFrom != null">
        Date_From,
      </if>
      <if test="dateTo != null">
        Date_To,
      </if>
      <if test="participationNumber != null">
        Participation_Number,
      </if>
      <if test="participationNumberPresent != null">
        Participation_Number_Present,
      </if>
      <if test="reasonReject != null">
        Reason_Reject,
      </if>
      <if test="personalDataId != null">
        Personal_Data_Id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="subscriptionNumber != null">
        #{subscriptionNumber,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        #{period,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="dateFrom != null">
        #{dateFrom,jdbcType=DATE},
      </if>
      <if test="dateTo != null">
        #{dateTo,jdbcType=DATE},
      </if>
      <if test="participationNumber != null">
        #{participationNumber,jdbcType=REAL},
      </if>
      <if test="participationNumberPresent != null">
        #{participationNumberPresent,jdbcType=REAL},
      </if>
      <if test="reasonReject != null">
        #{reasonReject,jdbcType=VARCHAR},
      </if>
      <if test="personalDataId != null">
        #{personalDataId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ru.rybinsk.silhouette.model.SubscriptionExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from subscription sn
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update subscription sn
    <set>
      <if test="record.id != null">
        sn.Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.subscriptionNumber != null">
        sn.Subscription_Number = #{record.subscriptionNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.period != null">
        sn.Period = #{record.period,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        sn.`Type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        sn.`State` = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.dateFrom != null">
        sn.Date_From = #{record.dateFrom,jdbcType=DATE},
      </if>
      <if test="record.dateTo != null">
        sn.Date_To = #{record.dateTo,jdbcType=DATE},
      </if>
      <if test="record.participationNumber != null">
        sn.Participation_Number = #{record.participationNumber,jdbcType=REAL},
      </if>
      <if test="record.participationNumberPresent != null">
        sn.Participation_Number_Present = #{record.participationNumberPresent,jdbcType=REAL},
      </if>
      <if test="record.reasonReject != null">
        sn.Reason_Reject = #{record.reasonReject,jdbcType=VARCHAR},
      </if>
      <if test="record.personalDataId != null">
        sn.Personal_Data_Id = #{record.personalDataId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update subscription sn
    set sn.Id = #{record.id,jdbcType=INTEGER},
      sn.Subscription_Number = #{record.subscriptionNumber,jdbcType=VARCHAR},
      sn.Period = #{record.period,jdbcType=INTEGER},
      sn.`Type` = #{record.type,jdbcType=INTEGER},
      sn.`State` = #{record.state,jdbcType=INTEGER},
      sn.Date_From = #{record.dateFrom,jdbcType=DATE},
      sn.Date_To = #{record.dateTo,jdbcType=DATE},
      sn.Participation_Number = #{record.participationNumber,jdbcType=REAL},
      sn.Participation_Number_Present = #{record.participationNumberPresent,jdbcType=REAL},
      sn.Reason_Reject = #{record.reasonReject,jdbcType=VARCHAR},
      sn.Personal_Data_Id = #{record.personalDataId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ru.rybinsk.silhouette.model.Subscription">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update subscription
    <set>
      <if test="subscriptionNumber != null">
        Subscription_Number = #{subscriptionNumber,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        Period = #{period,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        `Type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        `State` = #{state,jdbcType=INTEGER},
      </if>
      <if test="dateFrom != null">
        Date_From = #{dateFrom,jdbcType=DATE},
      </if>
      <if test="dateTo != null">
        Date_To = #{dateTo,jdbcType=DATE},
      </if>
      <if test="participationNumber != null">
        Participation_Number = #{participationNumber,jdbcType=REAL},
      </if>
      <if test="participationNumberPresent != null">
        Participation_Number_Present = #{participationNumberPresent,jdbcType=REAL},
      </if>
      <if test="reasonReject != null">
        Reason_Reject = #{reasonReject,jdbcType=VARCHAR},
      </if>
      <if test="personalDataId != null">
        Personal_Data_Id = #{personalDataId,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ru.rybinsk.silhouette.model.Subscription">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update subscription
    set Subscription_Number = #{subscriptionNumber,jdbcType=VARCHAR},
      Period = #{period,jdbcType=INTEGER},
      `Type` = #{type,jdbcType=INTEGER},
      `State` = #{state,jdbcType=INTEGER},
      Date_From = #{dateFrom,jdbcType=DATE},
      Date_To = #{dateTo,jdbcType=DATE},
      Participation_Number = #{participationNumber,jdbcType=REAL},
      Participation_Number_Present = #{participationNumberPresent,jdbcType=REAL},
      Reason_Reject = #{reasonReject,jdbcType=VARCHAR},
      Personal_Data_Id = #{personalDataId,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>