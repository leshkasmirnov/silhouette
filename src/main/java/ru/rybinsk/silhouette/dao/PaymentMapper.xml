<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ru.rybinsk.silhouette.dao.PaymentMapper">
  <resultMap id="BaseResultMap" type="ru.rybinsk.silhouette.model.Payment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="pyt_Id" jdbcType="INTEGER" property="id" />
    <result column="pyt_Subscription_Id" jdbcType="INTEGER" property="subscriptionId" />
    <result column="pyt_Paid" jdbcType="BIT" property="paid" />
    <result column="pyt_Payment_Date" jdbcType="DATE" property="paymentDate" />
    <result column="pyt_Sum" jdbcType="VARCHAR" property="sum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    pyt.Id as pyt_Id, pyt.Subscription_Id as pyt_Subscription_Id, pyt.Paid as pyt_Paid, 
    pyt.Payment_Date as pyt_Payment_Date, pyt.`Sum` as `pyt_Sum`
  </sql>
  <select id="selectByExample" parameterType="ru.rybinsk.silhouette.model.PaymentExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from payment pyt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from payment pyt
    where pyt.Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from payment
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="ru.rybinsk.silhouette.model.PaymentExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from payment pyt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ru.rybinsk.silhouette.model.Payment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into payment (Subscription_Id, Paid, Payment_Date, 
      `Sum`)
    values (#{subscriptionId,jdbcType=INTEGER}, #{paid,jdbcType=BIT}, #{paymentDate,jdbcType=DATE}, 
      #{sum,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="ru.rybinsk.silhouette.model.Payment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="subscriptionId != null">
        Subscription_Id,
      </if>
      <if test="paid != null">
        Paid,
      </if>
      <if test="paymentDate != null">
        Payment_Date,
      </if>
      <if test="sum != null">
        `Sum`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="subscriptionId != null">
        #{subscriptionId,jdbcType=INTEGER},
      </if>
      <if test="paid != null">
        #{paid,jdbcType=BIT},
      </if>
      <if test="paymentDate != null">
        #{paymentDate,jdbcType=DATE},
      </if>
      <if test="sum != null">
        #{sum,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ru.rybinsk.silhouette.model.PaymentExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from payment pyt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update payment pyt
    <set>
      <if test="record.id != null">
        pyt.Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.subscriptionId != null">
        pyt.Subscription_Id = #{record.subscriptionId,jdbcType=INTEGER},
      </if>
      <if test="record.paid != null">
        pyt.Paid = #{record.paid,jdbcType=BIT},
      </if>
      <if test="record.paymentDate != null">
        pyt.Payment_Date = #{record.paymentDate,jdbcType=DATE},
      </if>
      <if test="record.sum != null">
        pyt.`Sum` = #{record.sum,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update payment pyt
    set pyt.Id = #{record.id,jdbcType=INTEGER},
      pyt.Subscription_Id = #{record.subscriptionId,jdbcType=INTEGER},
      pyt.Paid = #{record.paid,jdbcType=BIT},
      pyt.Payment_Date = #{record.paymentDate,jdbcType=DATE},
      pyt.`Sum` = #{record.sum,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ru.rybinsk.silhouette.model.Payment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update payment
    <set>
      <if test="subscriptionId != null">
        Subscription_Id = #{subscriptionId,jdbcType=INTEGER},
      </if>
      <if test="paid != null">
        Paid = #{paid,jdbcType=BIT},
      </if>
      <if test="paymentDate != null">
        Payment_Date = #{paymentDate,jdbcType=DATE},
      </if>
      <if test="sum != null">
        `Sum` = #{sum,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ru.rybinsk.silhouette.model.Payment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update payment
    set Subscription_Id = #{subscriptionId,jdbcType=INTEGER},
      Paid = #{paid,jdbcType=BIT},
      Payment_Date = #{paymentDate,jdbcType=DATE},
      `Sum` = #{sum,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>